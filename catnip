#!/usr/bin/env bash

# detect OS and set PROJECT_DIR correctly
if [[ "$OSTYPE" == "msys" ]] || [[ "$OSTYPE" == "win32" ]] || [[ "$OSTYPE" == "cygwin" ]]; then
    PROJECT_DIR="$(pwd -W 2>/dev/null || pwd)"
    . "$PROJECT_DIR/.venv/Scripts/activate"
    export PYTHONPATH="$PROJECT_DIR"
else
    PROJECT_DIR="$(dirname "$(realpath "$0")")"
    source "$PROJECT_DIR/.venv/bin/activate"
    export PYTHONPATH="$PROJECT_DIR"
fi

function loading_icon() {
    local load_interval="${1}"
    local loading_message="${2}"
    local elapsed=0
    local loading_animation=( '—' "\\" '|' '/' )

    echo -n "${loading_message} "

    # this part is to make the cursor not blink
    # on top of the animation while it lasts
    tput civis
    trap "tput cnorm" EXIT
    while [ "${load_interval}" -ne "${elapsed}" ]; do
        for frame in "${loading_animation[@]}" ; do
            printf "%s\b" "${frame}"
            sleep 0.25
        done
        elapsed=$(( elapsed + 1 ))
    done
    printf " \b\n"
}

# check if the user wants to run the web version
if [[ "$1" == "web" ]]; then
    # start the server silently in background
    source "$PROJECT_DIR/.venv/bin/activate"
    export PYTHONPATH="$PROJECT_DIR"

    textual serve "python -m app.entry" >/dev/null 2>&1 &
    SERVER_PID=$!

    echo -e "\n"
    loading_icon 2 "starting server"
    open http://localhost:8000

    echo -e "🍀 catnip web server running silently in background - press CTRL+C to stop"

    # wait for ctrl+c to gracefully shut down
    trap "kill $SERVER_PID >/dev/null 2>&1; echo -e '\n🛑 server stopped!'; exit" INT
    while true; do sleep 1; done
else
    python3 "$PROJECT_DIR/app/entry.py"
fi